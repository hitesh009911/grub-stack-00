name: Continuous Deployment

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types: [completed]
    branches: [main, develop]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # ===========================================
  # STAGING DEPLOYMENT
  # ===========================================
  
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && github.event.workflow_run.conclusion == 'success'
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Deploy to staging
      run: |
        echo "üöÄ Deploying to staging environment..."
        
        # Pull latest images
        docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:develop
        
        # Deploy using docker-compose
        docker-compose -f docker-compose.staging.yml pull
        docker-compose -f docker-compose.staging.yml up -d
        
        # Wait for services to be healthy
        echo "‚è≥ Waiting for services to be healthy..."
        sleep 60
        
        # Run health checks
        ./docker/test-services.sh
        
        echo "‚úÖ Staging deployment completed!"
        
    - name: Notify deployment
      uses: 8398a7/action-slack@v3
      if: always()
      with:
        status: ${{ job.status }}
        channel: '#deployments'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        fields: repo,message,commit,author,action,eventName,ref,workflow

  # ===========================================
  # PRODUCTION DEPLOYMENT
  # ===========================================
  
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event.workflow_run.conclusion == 'success'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Deploy to production
      run: |
        echo "üöÄ Deploying to production environment..."
        
        # Pull latest images
        docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main
        
        # Deploy using docker-compose
        docker-compose -f docker-compose.prod.yml pull
        docker-compose -f docker-compose.prod.yml up -d
        
        # Wait for services to be healthy
        echo "‚è≥ Waiting for services to be healthy..."
        sleep 120
        
        # Run health checks
        ./docker/test-services.sh
        
        echo "‚úÖ Production deployment completed!"
        
    - name: Notify deployment
      uses: 8398a7/action-slack@v3
      if: always()
      with:
        status: ${{ job.status }}
        channel: '#deployments'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        fields: repo,message,commit,author,action,eventName,ref,workflow

  # ===========================================
  # ROLLBACK
  # ===========================================
  
  rollback:
    name: Rollback Deployment
    runs-on: ubuntu-latest
    if: failure()
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Rollback deployment
      run: |
        echo "üîÑ Rolling back deployment..."
        
        # Rollback to previous version
        docker-compose -f docker-compose.${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }}.yml down
        docker-compose -f docker-compose.${{ github.ref == 'refs/heads/main' && 'prod' || 'staging' }}.yml up -d
        
        echo "‚úÖ Rollback completed!"
        
    - name: Notify rollback
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#deployments'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
